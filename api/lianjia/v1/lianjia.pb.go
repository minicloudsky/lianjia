// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: lianjia/v1/lianjia.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListErshoufangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size  int32  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Query string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListErshoufangRequest) Reset() {
	*x = ListErshoufangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lianjia_v1_lianjia_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListErshoufangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListErshoufangRequest) ProtoMessage() {}

func (x *ListErshoufangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lianjia_v1_lianjia_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListErshoufangRequest.ProtoReflect.Descriptor instead.
func (*ListErshoufangRequest) Descriptor() ([]byte, []int) {
	return file_lianjia_v1_lianjia_proto_rawDescGZIP(), []int{0}
}

func (x *ListErshoufangRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListErshoufangRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListErshoufangRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ErShouFangInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId                        int64   `protobuf:"varint,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	HouseCode                     string  `protobuf:"bytes,2,opt,name=house_code,json=houseCode,proto3" json:"house_code,omitempty"`
	ResblockId                    int64   `protobuf:"varint,3,opt,name=resblock_id,json=resblockId,proto3" json:"resblock_id,omitempty"`
	Title                         string  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Desc                          string  `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	RecoDesc                      string  `protobuf:"bytes,6,opt,name=reco_desc,json=recoDesc,proto3" json:"reco_desc,omitempty"`
	TotalPrice                    float32 `protobuf:"fixed32,7,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	UnitPrice                     float32 `protobuf:"fixed32,8,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	JumpUrl                       string  `protobuf:"bytes,9,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	ListPictureUrl                string  `protobuf:"bytes,10,opt,name=list_picture_url,json=listPictureUrl,proto3" json:"list_picture_url,omitempty"`
	HouseStatus                   int32   `protobuf:"varint,11,opt,name=house_status,json=houseStatus,proto3" json:"house_status,omitempty"`
	IsCtypeHouse                  int32   `protobuf:"varint,12,opt,name=is_ctype_house,json=isCtypeHouse,proto3" json:"is_ctype_house,omitempty"`
	FbExpoId                      string  `protobuf:"bytes,13,opt,name=fb_expo_id,json=fbExpoId,proto3" json:"fb_expo_id,omitempty"`
	YeZhuTuijianStatus            int32   `protobuf:"varint,14,opt,name=ye_zhu_tuijian_status,json=yeZhuTuijianStatus,proto3" json:"ye_zhu_tuijian_status,omitempty"`
	HaofangStatus                 int32   `protobuf:"varint,15,opt,name=haofang_status,json=haofangStatus,proto3" json:"haofang_status,omitempty"`
	YezhuPayStatus                int32   `protobuf:"varint,16,opt,name=yezhu_pay_status,json=yezhuPayStatus,proto3" json:"yezhu_pay_status,omitempty"`
	VrStatus                      int32   `protobuf:"varint,17,opt,name=vr_status,json=vrStatus,proto3" json:"vr_status,omitempty"`
	KeyStatus                     int32   `protobuf:"varint,18,opt,name=key_status,json=keyStatus,proto3" json:"key_status,omitempty"`
	NewStatus                     int32   `protobuf:"varint,19,opt,name=new_status,json=newStatus,proto3" json:"new_status,omitempty"`
	BrandTitle                    string  `protobuf:"bytes,20,opt,name=brand_title,json=brandTitle,proto3" json:"brand_title,omitempty"`
	HotTopDspAgentUcId            string  `protobuf:"bytes,21,opt,name=hot_top_dsp_agent_uc_id,json=hotTopDspAgentUcId,proto3" json:"hot_top_dsp_agent_uc_id,omitempty"`
	HotTopDigV                    string  `protobuf:"bytes,22,opt,name=hot_top_dig_v,json=hotTopDigV,proto3" json:"hot_top_dig_v,omitempty"`
	HotTop                        int32   `protobuf:"varint,23,opt,name=hot_top,json=hotTop,proto3" json:"hot_top,omitempty"`
	SellPriceStatus               int32   `protobuf:"varint,24,opt,name=sell_price_status,json=sellPriceStatus,proto3" json:"sell_price_status,omitempty"`
	PriceListingGovCn             int32   `protobuf:"varint,25,opt,name=price_listing_gov_cn,json=priceListingGovCn,proto3" json:"price_listing_gov_cn,omitempty"`
	UnitPriceGov                  int32   `protobuf:"varint,26,opt,name=unit_price_gov,json=unitPriceGov,proto3" json:"unit_price_gov,omitempty"`
	TotalPricePrefix              string  `protobuf:"bytes,27,opt,name=total_price_prefix,json=totalPricePrefix,proto3" json:"total_price_prefix,omitempty"`
	TotalPriceTitle               string  `protobuf:"bytes,28,opt,name=total_price_title,json=totalPriceTitle,proto3" json:"total_price_title,omitempty"`
	TotalPriceSuffix              string  `protobuf:"bytes,29,opt,name=total_price_suffix,json=totalPriceSuffix,proto3" json:"total_price_suffix,omitempty"`
	UnitPricePrefix               string  `protobuf:"bytes,30,opt,name=unit_price_prefix,json=unitPricePrefix,proto3" json:"unit_price_prefix,omitempty"`
	UnitPriceTitle                string  `protobuf:"bytes,31,opt,name=unit_price_title,json=unitPriceTitle,proto3" json:"unit_price_title,omitempty"`
	UnitPriceSuffix               string  `protobuf:"bytes,32,opt,name=unit_price_suffix,json=unitPriceSuffix,proto3" json:"unit_price_suffix,omitempty"`
	PriceInfoListTotalPricePrefix string  `protobuf:"bytes,33,opt,name=price_info_list_total_price_prefix,json=priceInfoListTotalPricePrefix,proto3" json:"price_info_list_total_price_prefix,omitempty"`
	PriceInfoListTotalPriceStr    string  `protobuf:"bytes,34,opt,name=price_info_list_total_price_str,json=priceInfoListTotalPriceStr,proto3" json:"price_info_list_total_price_str,omitempty"`
	PriceInfoListTotalPriceSuffix string  `protobuf:"bytes,35,opt,name=price_info_list_total_price_suffix,json=priceInfoListTotalPriceSuffix,proto3" json:"price_info_list_total_price_suffix,omitempty"`
	PriceInfoListUnitPricePrefix  string  `protobuf:"bytes,36,opt,name=price_info_list_unit_price_prefix,json=priceInfoListUnitPricePrefix,proto3" json:"price_info_list_unit_price_prefix,omitempty"`
	PriceInfoListUnitPriceStr     string  `protobuf:"bytes,37,opt,name=price_info_list_unit_price_str,json=priceInfoListUnitPriceStr,proto3" json:"price_info_list_unit_price_str,omitempty"`
	PriceInfoListUnitPriceSuffix  string  `protobuf:"bytes,38,opt,name=price_info_list_unit_price_suffix,json=priceInfoListUnitPriceSuffix,proto3" json:"price_info_list_unit_price_suffix,omitempty"`
	Tags                          string  `protobuf:"bytes,39,opt,name=tags,proto3" json:"tags,omitempty"`
	Layout                        string  `protobuf:"bytes,40,opt,name=layout,proto3" json:"layout,omitempty"`
	Area                          float32 `protobuf:"fixed32,41,opt,name=area,proto3" json:"area,omitempty"`
	Direction                     string  `protobuf:"bytes,42,opt,name=direction,proto3" json:"direction,omitempty"`
	Community                     string  `protobuf:"bytes,43,opt,name=community,proto3" json:"community,omitempty"`
	District                      string  `protobuf:"bytes,44,opt,name=district,proto3" json:"district,omitempty"`
	Street                        string  `protobuf:"bytes,45,opt,name=street,proto3" json:"street,omitempty"`
	Floor                         string  `protobuf:"bytes,46,opt,name=floor,proto3" json:"floor,omitempty"`
	TotalFloor                    int32   `protobuf:"varint,47,opt,name=total_floor,json=totalFloor,proto3" json:"total_floor,omitempty"`
}

func (x *ErShouFangInfo) Reset() {
	*x = ErShouFangInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lianjia_v1_lianjia_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErShouFangInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErShouFangInfo) ProtoMessage() {}

func (x *ErShouFangInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lianjia_v1_lianjia_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErShouFangInfo.ProtoReflect.Descriptor instead.
func (*ErShouFangInfo) Descriptor() ([]byte, []int) {
	return file_lianjia_v1_lianjia_proto_rawDescGZIP(), []int{1}
}

func (x *ErShouFangInfo) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *ErShouFangInfo) GetHouseCode() string {
	if x != nil {
		return x.HouseCode
	}
	return ""
}

func (x *ErShouFangInfo) GetResblockId() int64 {
	if x != nil {
		return x.ResblockId
	}
	return 0
}

func (x *ErShouFangInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ErShouFangInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ErShouFangInfo) GetRecoDesc() string {
	if x != nil {
		return x.RecoDesc
	}
	return ""
}

func (x *ErShouFangInfo) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *ErShouFangInfo) GetUnitPrice() float32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *ErShouFangInfo) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *ErShouFangInfo) GetListPictureUrl() string {
	if x != nil {
		return x.ListPictureUrl
	}
	return ""
}

func (x *ErShouFangInfo) GetHouseStatus() int32 {
	if x != nil {
		return x.HouseStatus
	}
	return 0
}

func (x *ErShouFangInfo) GetIsCtypeHouse() int32 {
	if x != nil {
		return x.IsCtypeHouse
	}
	return 0
}

func (x *ErShouFangInfo) GetFbExpoId() string {
	if x != nil {
		return x.FbExpoId
	}
	return ""
}

func (x *ErShouFangInfo) GetYeZhuTuijianStatus() int32 {
	if x != nil {
		return x.YeZhuTuijianStatus
	}
	return 0
}

func (x *ErShouFangInfo) GetHaofangStatus() int32 {
	if x != nil {
		return x.HaofangStatus
	}
	return 0
}

func (x *ErShouFangInfo) GetYezhuPayStatus() int32 {
	if x != nil {
		return x.YezhuPayStatus
	}
	return 0
}

func (x *ErShouFangInfo) GetVrStatus() int32 {
	if x != nil {
		return x.VrStatus
	}
	return 0
}

func (x *ErShouFangInfo) GetKeyStatus() int32 {
	if x != nil {
		return x.KeyStatus
	}
	return 0
}

func (x *ErShouFangInfo) GetNewStatus() int32 {
	if x != nil {
		return x.NewStatus
	}
	return 0
}

func (x *ErShouFangInfo) GetBrandTitle() string {
	if x != nil {
		return x.BrandTitle
	}
	return ""
}

func (x *ErShouFangInfo) GetHotTopDspAgentUcId() string {
	if x != nil {
		return x.HotTopDspAgentUcId
	}
	return ""
}

func (x *ErShouFangInfo) GetHotTopDigV() string {
	if x != nil {
		return x.HotTopDigV
	}
	return ""
}

func (x *ErShouFangInfo) GetHotTop() int32 {
	if x != nil {
		return x.HotTop
	}
	return 0
}

func (x *ErShouFangInfo) GetSellPriceStatus() int32 {
	if x != nil {
		return x.SellPriceStatus
	}
	return 0
}

func (x *ErShouFangInfo) GetPriceListingGovCn() int32 {
	if x != nil {
		return x.PriceListingGovCn
	}
	return 0
}

func (x *ErShouFangInfo) GetUnitPriceGov() int32 {
	if x != nil {
		return x.UnitPriceGov
	}
	return 0
}

func (x *ErShouFangInfo) GetTotalPricePrefix() string {
	if x != nil {
		return x.TotalPricePrefix
	}
	return ""
}

func (x *ErShouFangInfo) GetTotalPriceTitle() string {
	if x != nil {
		return x.TotalPriceTitle
	}
	return ""
}

func (x *ErShouFangInfo) GetTotalPriceSuffix() string {
	if x != nil {
		return x.TotalPriceSuffix
	}
	return ""
}

func (x *ErShouFangInfo) GetUnitPricePrefix() string {
	if x != nil {
		return x.UnitPricePrefix
	}
	return ""
}

func (x *ErShouFangInfo) GetUnitPriceTitle() string {
	if x != nil {
		return x.UnitPriceTitle
	}
	return ""
}

func (x *ErShouFangInfo) GetUnitPriceSuffix() string {
	if x != nil {
		return x.UnitPriceSuffix
	}
	return ""
}

func (x *ErShouFangInfo) GetPriceInfoListTotalPricePrefix() string {
	if x != nil {
		return x.PriceInfoListTotalPricePrefix
	}
	return ""
}

func (x *ErShouFangInfo) GetPriceInfoListTotalPriceStr() string {
	if x != nil {
		return x.PriceInfoListTotalPriceStr
	}
	return ""
}

func (x *ErShouFangInfo) GetPriceInfoListTotalPriceSuffix() string {
	if x != nil {
		return x.PriceInfoListTotalPriceSuffix
	}
	return ""
}

func (x *ErShouFangInfo) GetPriceInfoListUnitPricePrefix() string {
	if x != nil {
		return x.PriceInfoListUnitPricePrefix
	}
	return ""
}

func (x *ErShouFangInfo) GetPriceInfoListUnitPriceStr() string {
	if x != nil {
		return x.PriceInfoListUnitPriceStr
	}
	return ""
}

func (x *ErShouFangInfo) GetPriceInfoListUnitPriceSuffix() string {
	if x != nil {
		return x.PriceInfoListUnitPriceSuffix
	}
	return ""
}

func (x *ErShouFangInfo) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *ErShouFangInfo) GetLayout() string {
	if x != nil {
		return x.Layout
	}
	return ""
}

func (x *ErShouFangInfo) GetArea() float32 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *ErShouFangInfo) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *ErShouFangInfo) GetCommunity() string {
	if x != nil {
		return x.Community
	}
	return ""
}

func (x *ErShouFangInfo) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *ErShouFangInfo) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *ErShouFangInfo) GetFloor() string {
	if x != nil {
		return x.Floor
	}
	return ""
}

func (x *ErShouFangInfo) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

type ListErshoufangReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*ErShouFangInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int32             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListErshoufangReply) Reset() {
	*x = ListErshoufangReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lianjia_v1_lianjia_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListErshoufangReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListErshoufangReply) ProtoMessage() {}

func (x *ListErshoufangReply) ProtoReflect() protoreflect.Message {
	mi := &file_lianjia_v1_lianjia_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListErshoufangReply.ProtoReflect.Descriptor instead.
func (*ListErshoufangReply) Descriptor() ([]byte, []int) {
	return file_lianjia_v1_lianjia_proto_rawDescGZIP(), []int{2}
}

func (x *ListErshoufangReply) GetData() []*ErShouFangInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListErshoufangReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_lianjia_v1_lianjia_proto protoreflect.FileDescriptor

var file_lianjia_v1_lianjia_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x61,
	0x6e, 0x6a, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6c, 0x69, 0x61, 0x6e,
	0x6a, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x72, 0x73, 0x68, 0x6f, 0x75, 0x66, 0x61, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x64, 0x20, 0x00, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xb1, 0x0e, 0x0a, 0x0e, 0x45, 0x72, 0x53,
	0x68, 0x6f, 0x75, 0x46, 0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a,
	0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a,
	0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x21, 0x0a, 0x0c, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x63, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x73, 0x43,
	0x74, 0x79, 0x70, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x66, 0x62, 0x5f,
	0x65, 0x78, 0x70, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x62, 0x45, 0x78, 0x70, 0x6f, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x79, 0x65, 0x5f, 0x7a, 0x68,
	0x75, 0x5f, 0x74, 0x75, 0x69, 0x6a, 0x69, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x79, 0x65, 0x5a, 0x68, 0x75, 0x54, 0x75, 0x69,
	0x6a, 0x69, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61,
	0x6f, 0x66, 0x61, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x68, 0x61, 0x6f, 0x66, 0x61, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x79, 0x65, 0x7a, 0x68, 0x75, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x79, 0x65, 0x7a,
	0x68, 0x75, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x76,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x76, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x65,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x65, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x17, 0x68, 0x6f, 0x74, 0x5f, 0x74,
	0x6f, 0x70, 0x5f, 0x64, 0x73, 0x70, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x6f, 0x74, 0x54, 0x6f, 0x70,
	0x44, 0x73, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0d,
	0x68, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x64, 0x69, 0x67, 0x5f, 0x76, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x44, 0x69, 0x67, 0x56, 0x12,
	0x17, 0x0a, 0x07, 0x68, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x6f, 0x76, 0x5f, 0x63, 0x6e, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x47, 0x6f, 0x76, 0x43, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x76, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75,
	0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x76, 0x12, 0x2c, 0x0a, 0x12, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x75, 0x66,
	0x66, 0x69, 0x78, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12,
	0x28, 0x0a, 0x10, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x6e, 0x69,
	0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53,
	0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x49, 0x0a, 0x22, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x43, 0x0a, 0x1f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x73, 0x74, 0x72, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x72, 0x12, 0x49, 0x0a, 0x22, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78,
	0x12, 0x47, 0x0a, 0x21, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x41, 0x0a, 0x1e, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x19, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x12, 0x47, 0x0a, 0x21,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69,
	0x78, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53,
	0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x27, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x29, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x2c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x2e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x22, 0x5b, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x72, 0x73, 0x68, 0x6f, 0x75, 0x66, 0x61, 0x6e, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x53, 0x68, 0x6f, 0x75, 0x46, 0x61, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0x81, 0x01, 0x0a, 0x07, 0x4c, 0x69,
	0x61, 0x6e, 0x6a, 0x69, 0x61, 0x12, 0x76, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x72, 0x73,
	0x68, 0x6f, 0x75, 0x66, 0x61, 0x6e, 0x67, 0x12, 0x21, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x72, 0x73, 0x68, 0x6f, 0x75, 0x66,
	0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6c, 0x69, 0x61,
	0x6e, 0x6a, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x72, 0x73, 0x68,
	0x6f, 0x75, 0x66, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x2f, 0x65, 0x72,
	0x73, 0x68, 0x6f, 0x75, 0x66, 0x61, 0x6e, 0x67, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x60, 0x0a,
	0x19, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x4c, 0x69, 0x61, 0x6e,
	0x6a, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x73, 0x6b, 0x79, 0x2f, 0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lianjia_v1_lianjia_proto_rawDescOnce sync.Once
	file_lianjia_v1_lianjia_proto_rawDescData = file_lianjia_v1_lianjia_proto_rawDesc
)

func file_lianjia_v1_lianjia_proto_rawDescGZIP() []byte {
	file_lianjia_v1_lianjia_proto_rawDescOnce.Do(func() {
		file_lianjia_v1_lianjia_proto_rawDescData = protoimpl.X.CompressGZIP(file_lianjia_v1_lianjia_proto_rawDescData)
	})
	return file_lianjia_v1_lianjia_proto_rawDescData
}

var file_lianjia_v1_lianjia_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_lianjia_v1_lianjia_proto_goTypes = []interface{}{
	(*ListErshoufangRequest)(nil), // 0: lianjia.v1.ListErshoufangRequest
	(*ErShouFangInfo)(nil),        // 1: lianjia.v1.ErShouFangInfo
	(*ListErshoufangReply)(nil),   // 2: lianjia.v1.ListErshoufangReply
}
var file_lianjia_v1_lianjia_proto_depIdxs = []int32{
	1, // 0: lianjia.v1.ListErshoufangReply.data:type_name -> lianjia.v1.ErShouFangInfo
	0, // 1: lianjia.v1.Lianjia.ListErshoufang:input_type -> lianjia.v1.ListErshoufangRequest
	2, // 2: lianjia.v1.Lianjia.ListErshoufang:output_type -> lianjia.v1.ListErshoufangReply
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_lianjia_v1_lianjia_proto_init() }
func file_lianjia_v1_lianjia_proto_init() {
	if File_lianjia_v1_lianjia_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lianjia_v1_lianjia_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListErshoufangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lianjia_v1_lianjia_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErShouFangInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lianjia_v1_lianjia_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListErshoufangReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lianjia_v1_lianjia_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lianjia_v1_lianjia_proto_goTypes,
		DependencyIndexes: file_lianjia_v1_lianjia_proto_depIdxs,
		MessageInfos:      file_lianjia_v1_lianjia_proto_msgTypes,
	}.Build()
	File_lianjia_v1_lianjia_proto = out.File
	file_lianjia_v1_lianjia_proto_rawDesc = nil
	file_lianjia_v1_lianjia_proto_goTypes = nil
	file_lianjia_v1_lianjia_proto_depIdxs = nil
}
